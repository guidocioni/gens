#!/bin/bash

# Cd into our working directory in case we're not into it already
cd "$(dirname "$0")";

echo "gens: Starting processing of GEFS model data - `date`"

export GRIBDIR=/tmp/gens/
export IMGDIR=/tmp/gens/
export HOME_SCRIPTS=$(pwd)
export NCFTP_BOOKMARK="altervista"
DATA_DOWNLOAD=true
DATA_PLOTTING=false
DATA_UPLOAD=false

#
. ./functions_download_gefs.sh
export SHELL=$(type -p bash)
# We need to open many files at the same time
ulimit -Sn 8192
########################################### 

mkdir -p ${GRIBDIR}euratl
mkdir -p ${GRIBDIR}nh

##### COMPUTE the date variables to determine the run
export MONTH=$(date -u +"%m")
export DATE=$(date -u +"%d")
export YEAR=$(date -u +"%Y")
export HOUR=$(date -u +"%H")

if [ $HOUR -ge 6 ] && [ $HOUR -lt 12 ]
then
    export RUN=00
elif [ $HOUR -ge 12 ] && [ $HOUR -lt 18 ]
then
    export RUN=06
elif [ $HOUR -ge 18 ]
then
    export RUN=12
elif [ $HOUR -ge 00 ] && [ $HOUR -lt 6 ]
then
    DATE=$(date -u -d'yesterday' +"%d")
    export RUN=18
else
    echo "Invalid hour!"
fi

# Move to the data folder to do processing
cd ${GRIBDIR} || { echo 'Cannot change to DATA folder' ; exit 1; }


# SECTION 1 - DATA DOWNLOAD ############################################################

if [ "$DATA_DOWNLOAD" = true ]; then
    echo "-----------------------------------------------"
    echo "gens: Starting downloading of data - `date`"
    echo "-----------------------------------------------"

    #loop through forecast hours
    hours_download=$(seq -s " " 6 6 384)
    export SKIP_SAME_TIME=1
    #clean out the old grib data
    rm $GRIBDIR/*

    parallel -j 10 download_gefs_member ::: $hours_download

    # We need sellonlatbox to shift the grid from 0,360 to -180, 180. Somehow it is
    # easier to do it now that afterwars in Python
    cdo -f nc copy -sellonlatbox,-180,180,-90,90 -mergetime $GRIBDIR/"grib_gefs_"$YEAR$MONTH$DATE"_"$RUN"_*_00" $GRIBDIR/"grib_gefs_"$YEAR$MONTH$DATE"_"$RUN"_00.nc"

    for j in {1..20}
        do
            pert="0${j}"
            pert="${pert: -2}"
            cdo -f nc copy -sellonlatbox,-180,180,-90,90 -mergetime $GRIBDIR/"grib_gefs_"$YEAR""$MONTH""$DATE"_"$RUN"_*_"$pert"" $GRIBDIR/"grib_gefs_"$YEAR""$MONTH""$DATE"_"$RUN"_"$pert"".nc
        done

    # Remove all the non-netcdf files which are not necessary 
    rm $GRIBDIR/*[!.nc]
fi

# SECTION 2 - DATA PLOTTING ############################################################

if [ "$DATA_PLOTTING" = true ]; then
    echo "-----------------------------------------------"
    echo "gens: Starting plotting of data - `date`"
    echo "-----------------------------------------------"
    python --version
    cp ${HOME_SCRIPTS}/*.py ${GRIBDIR}
    export QT_QPA_PLATFORM=offscreen 

    scripts=("plot_gph_500.py" "plot_t_850.py" "plot_prec.py")
    projections=("euratl" "nh")

    parallel -j 8 python ::: "${scripts[@]}" ::: "${projections[@]}"

    python plot_meteogram.py Milano Roma Palermo Hamburg Pisa Storrs Utrecht Tromso Toulouse Sassari Cagliari Munich 
fi


# SECTION 3 - IMAGES UPLOAD ############################################################
# Use ncftpbookmarks to add a new FTP server with credentials
if [ "$DATA_UPLOAD" = true ]; then
    echo "-----------------------------------------------"
    echo "gens: Starting FTP uploading - `date`"
    echo "-----------------------------------------------"

    ncftpput -R -v altervista gens ${IMGDIR}/meteogram_*

    ncftpput -R -v -DD altervista gens/nh/t_850 ${IMGDIR}/nh/t_850_*
    ncftpput -R -v -DD altervista gens/nh/gph_500 ${IMGDIR}/nh/gph_500_*
    ncftpput -R -v -DD altervista gens/nh/prob_snow ${IMGDIR}/nh/prob_snow_*

    ncftpput -R -v -DD altervista gens/euratl/t_850 ${IMGDIR}/euratl/t_850_*
    ncftpput -R -v -DD altervista gens/euratl/gph_500 ${IMGDIR}/euratl/gph_500_*
    ncftpput -R -v -DD altervista gens/euratl/prob_snow ${IMGDIR}/euratl/prob_snow_*
fi

# SECTION 4 - CLEANING ############################################################

#Remove images locally
rm ${IMGDIR}nh/*.png
rm ${IMGDIR}euratl/*.png
rm ${IMGDIR}*.py

echo "-----------------------------------------------"
echo "gens: Finished cleaning up - `date`"
echo "----------------------------------------------_"

############################################################

cd -
